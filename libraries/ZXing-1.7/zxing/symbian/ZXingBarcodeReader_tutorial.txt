The whole ZXingBarcodeReader folder is a Carbide project build and tested on both 
S60 5th Edition SDK and S60 3rd Edition FP2. (currently only Qr Codes can be detected)

== Prerequisities ==

* Have at least one S60 SDK. One of the SDKs can be obtained from here:
	http://www.forum.nokia.com/info/sw.nokia.com/id/ec866fab-4b76-49f6-b5a5-af0631419e9c/S60_All_in_One_SDKs.html
	
* After installing S60 SDK you have to install OpenC++.
	http://www.forum.nokia.com/info/sw.nokia.com/id/91d89929-fb8c-4d66-bea0-227e42df9053/Open_C_SDK_Plug-In.html
	
* (Optional) You can use Carbide C++ as IDE which makes the life a bit easier on creating applications for Symbian.
	An alternative approach is to compile the program in command line but i am afraid i can help you here because i
	have no idea :P

== Create project ==
If you have Carbide C++ IDE then go "File->Import->Symbian OS->Symbian OS Bld.inf file",
click "Browse" and find and select file "ZXingBarcodeReader\group\bld.inf".
Next step you select the S60 SDK to be compiled to and you are ready.

== Build project ==
Since the project is created, we can proceed to build it.

First in "ZXingBarcodeReader\camerawrapper" folder there is a folder named "epoc32".
Copy this folder and paste it to the root folder of the S60 SDK that you are going to use
(in my case: C:\S60\devices\S60_5th_Edition_SDK_v1.0). This step is important in order
to use a Plug-In API for the easier manipulation of the camera.

Now we are ready to compile. Since the camera is not supported in the Symbian emulator we
will build the project directly to be installed on a devidce.
Select "ZXingBarcodeReader" project in the "Project Explorer" view in Carbide, right click on it
and select "Properties". Expand "Carbide.c++" field and select "Build Configurations".
Being in the "SIS Builder" tab, select as Active Configuration the "Phone Degug (GCCE)".
Then press "Add" button, and to select a PKG file click "Browse" button. Go to "ZXingBarcodeReader\sis"
folder and select "ZXingBarcodeReader_S60.pkg" file. Make sure that "Self sign sis file" radio
button is selected and press OK.

Now go "Project->Build Project" and if everything goes right, you will have 2 installation files
in "ZXingBarcodeReader\sis" folder. Install the .sisx file to your device and you are ready.

== Deploying specificaly to S60 3rd edition ==
Deploying the project to a S60 3rd edition requires one more step (executed only once).
After the installation of OpenC/C++ plug-in, the installation files contained in the following folders
have to be installed to the device:

S60 SDK root folder \ nokia_plugin \ openc \ s60opencsis
and
S60 SDK root folder \ nokia_plugin \ opencpp \ s60opencppsis

If this step is not taken, the application will be able to be installed to the device but it WILL NOT RUN!
When deploying to S60 5th edition, this step is not required because the plug-in is integrated into it already.

	------ Optional when deploying to S60 3rd edition ------
	To integrate the installation files to the project installation file just put the following lines to the .pkg file:

	@"$(EPOCROOT)Epoc32\..\nokia_plugin\openc\s60opencsis\pips_s60_1_6_SS.sis", (0x20013851)
	@"$(EPOCROOT)Epoc32\..\nokia_plugin\openc\s60opencsis\openc_ssl_s60_1_6_SS.sis",(0x200110CB)
	@"$(EPOCROOT)Epoc32\..\nokia_plugin\openc\s60opencsis\openc_glib_s60_1_6_SS.sis",(0x200110CC)
	@"$(EPOCROOT)Epoc32\..\nokia_plugin\opencpp\s60opencppsis\STDCPP_s60_1_6_SS.sis",(0x2000F866)

	This will make the final installation file approximately 2.8MB which is not the best solution but this is left to 
	the judgement of the developer whether on not he takes this step.

== The same project in Qt ==

In case you are interested in using this project with Qt on Symbian, take a look at QQrDecoder folder.



