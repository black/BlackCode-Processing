<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
"http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
<title>proMIDI : : Track</title>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<link href="stylesheet.css" rel="stylesheet" type="text/css">
</head>
<body> 
<div id="page"> 
  <div id="describtion"> 
    <div id="libname"><img src="images/promidi.gif" width="259" height="40"></div> 
    <div id="indexlink"><a href="index.htm"><img src="images/index.gif"></a></div> 
  </div> 
  <div id="point"> 
    <div id="pointname"> name </div> 
    <div id="pointcontent"><div id="membertitle"> Track </div></div> 
  </div> 
  <div id="point"> 
    <div id="pointname"><a href="#" id="exampleButton" onClick="handleExample()">openExample</a></div> 
    <div id="pointcontent"><div id="example"><pre>import promidi.*;

Sequencer sequencer;

void setup(){
  sequencer = new Sequencer();

  MidiIO midiIO = MidiIO.getInstance();
  midiIO.printDevices();
  midiIO.closeOutput(1);
  MidiOut test = midiIO.getMidiOut(1,1);

  Track track = new Track("one", test);
  track.setQuantization(Q._1_4);
  track.addEvent(new Note(36, 127,40), 0);
  track.addEvent(new Note(49, 80,40), 1); 
  track.addEvent(new Note(41, 90,40), 2);
  track.addEvent(new Note(46, 127,40), 3);

  Song song = new Song("test", 120);
  song.addTrack(track);
  sequencer.setSong(song);
  sequencer.setLoopStartPoint(0);
  sequencer.setLoopEndPoint(512);
  sequencer.setLoopCount(-1);
}

void mousePressed(){
  if(mouseButton == LEFT) sequencer.start();
  else sequencer.stop();
}

void draw(){
}
</pre></div></div> 
  </div> 
  <div id="point"> 
    <div id="pointname"> description </div> 
    <div id="pointcontent">A track handles all midiEvents of a song for a certain midiout. You can directly 
 add Events like Notes or ControllerChanges to it or also work with patterns.</div> 
  </div> 
  <div id="point"> 
    <div id="pointname"> constructors </div> 
    <div id="pointcontent"> 
      <pre>Track(i_name, i_midiOut);
Pattern(i_name, i_length);
</pre> 
    </div> 
  </div> 
   
<div id="point"> 
  <div id="pointname"> parameters </div> 
  <div id="members">
  <div id="membername">i_name</div> 
  <div id="memberdesc">String: name for the track</div>

  <div id="membername">i_midiOut</div> 
  <div id="memberdesc">MidiOut: midi out the events are send to</div>

  <div id="membername">i_name</div> 
  <div id="memberdesc">String: the name of the pattern</div>

  <div id="membername">i_length</div> 
  <div id="memberdesc">long: the length of the pattern in ticks</div>
</div> 
</div> 
   
<div id="point"> 
  <div id="pointname"> methods </div> 
  <div id="members"> 
<div id="membername"><a href="track_method_addevent.htm">addEvent ( )</a></div> 
<div id="memberdesc">Adds a new event to the track.  However, if the event is already
 contained in the track, it is not added again.  The list of events
 is kept in time order, meaning that this event inserted at the
 appropriate place in the list, not necessarily at the end.</div> 
 
<div id="membername"><a href="track_method_addpattern.htm">addPattern ( )</a></div> 
<div id="memberdesc">Use this method to add a pattern to the track.</div> 
 
<div id="membername"><a href="track_method_getmidiout.htm">getMidiOut ( )</a></div> 
<div id="memberdesc">Returns the MidiOutput of the track.</div> 
 
<div id="membername"><a href="track_method_getname.htm">getName ( )</a></div> 
<div id="memberdesc">Returns the name of the pattern.</div> 
 
<div id="membername"><a href="track_method_getquantization.htm">getQuantization ( )</a></div> 
<div id="memberdesc">Returns the current quantization of the pattern.</div> 
 
<div id="membername"><a href="track_method_removeevent.htm">removeEvent ( )</a></div> 
<div id="memberdesc">Removes the specified event from the track.</div> 
 
<div id="membername"><a href="track_method_removepattern.htm">removePattern ( )</a></div> 
<div id="memberdesc">Use this method to add a pattern to the track.</div> 
 
<div id="membername"><a href="track_method_setmidiout.htm">setMidiOut ( )</a></div> 
<div id="memberdesc">Sets the MidiOut of the Track</div> 
 
<div id="membername"><a href="track_method_setname.htm">setName ( )</a></div> 
<div id="memberdesc">Sets the name of the track.</div> 
 
<div id="membername"><a href="track_method_setquantization.htm">setQuantization ( )</a></div> 
<div id="memberdesc">Sets the quantization for a pattern.</div> 
 
<div id="membername"><a href="track_method_size.htm">size ( )</a></div> 
<div id="memberdesc">Obtains the number of events in this pattern.</div> 
 
<div id="membername"><a href="track_method_ticks.htm">ticks ( )</a></div> 
<div id="memberdesc">Obtains the length of the pattern, expressed in MIDI ticks. (The duration of
 a tick in seconds is determined by the timing resolution of the
 <code>Sequence</code> containing this track, and also by the tempo of
 the music as set by the sequencer.)</div> 
</div> 
</div> 

  <div id="point"> 
    <div id="pointname"> usage </div> 
    <div id="pointcontent">Web & Application</div> 
  </div> 
  <div id="point"> 
    <div id="pointname"> related </div> 
    <div id="pointcontent"><A href="song_class_song.htm">Song</A><BR>
<A href="sequencer_class_sequencer.htm">Sequencer</A><BR>
<A href="pattern_class_pattern.htm">Pattern</A><BR>
</div> 
  </div> 
</div> 
</body>
<script language="JavaScript" src="script.js" type="text/javascript"></script>
</html>
