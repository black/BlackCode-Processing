<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
"http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
<title>proMIDI : : MidiIO : : openInput ( )</title>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<link href="stylesheet.css" rel="stylesheet" type="text/css">
</head>
<body> 
<div id="page"> 
  <div id="describtion"> 
    <div id="libname"><img src="images/promidi.gif" width="259" height="40"></div> 
    <div id="indexlink"><a href="index.htm"><img src="images/index.gif"></a></div> 
  </div> 
  <div id="point"> 
    <div id="pointname"> name </div> 
    <div id="pointcontent"><div id="membertitle"> openInput ( ) </div></div> 
  </div> 
  <div id="point"> 
    <div id="pointname"><a href="#" id="exampleButton" onClick="handleExample()">openExample</a></div> 
    <div id="pointcontent"><div id="example"><pre>import promidi.*;

MidiIO midiIO;

void setup(){
  size(128*5,128*5);
  smooth();
  background(0);
  
  midiIO = MidiIO.getInstance(this);
  println("printPorts of midiIO");
  midiIO.printDevices();
  midiIO.openInput(0,0);
}

void draw(){

}

void noteOn(
  Note note,
  int deviceNumber,
  int midiChannel
){
  int vel = note.getVelocity();
  int pit = note.getPitch();
  
  fill(255,vel*2,pit*2,vel*2);
  stroke(255,vel);
  ellipse(vel*5,pit*5,30,30);
}

void noteOff(
  Note note,
  int deviceNumber,
  int midiChannel
){
  int pit = note.getPitch();
  
  fill(255,pit*2,pit*2,pit*2);
  stroke(255,pit);
  ellipse(pit*5,pit*5,30,30);
}

void controllerIn(
  Controller controller,
  int deviceNumber,
  int midiChannel
){
  int num = controller.getNumber();
  int val = controller.getValue();
  
  fill(255,num*2,val*2,num*2);
  stroke(255,num);
  ellipse(num*5,val*5,30,30);
}

void programChange(
  ProgramChange programChange,
  int deviceNumber,
  int midiChannel
){
  int num = programChange.getNumber();
  
  fill(255,num*2,num*2,num*2);
  stroke(255,num);
  ellipse(num*5,num*5,30,30);
}
</pre></div></div> 
  </div> 
  <div id="point"> 
    <div id="pointname"> description </div> 
    <div id="pointcontent">Use this Methode to open an input device. You can open an 
 input device with its number or with its name. Once a input device is opened 
 it is reserved for your program. All opened devices are closed 
 by promidi when you close your application. You can also close opened devices 
 on your own.<br>
 Note that you open inputs with midi channels now, this makes you more
 flexible with handling incoming mididata. Instead of opening an input and
 analysing the incoming events in noteOn, controllerIn, noteOff or programChange
 you could use the plug method to directly forward the incoming events to
 a method and object of your choice.</div> 
  </div> 
  <div id="point"> 
    <div id="pointname"> syntax </div> 
    <div id="pointcontent"> 
      <pre>openInput(inputDeviceNumber, midiChannel);
openInput(inputDeviceName, midiChannel);
</pre> 
    </div> 
  </div> 
   
<div id="point"> 
  <div id="pointname"> parameters </div> 
  <div id="members">
  <div id="membername">inputDeviceNumber</div> 
  <div id="memberdesc">int, number of the inputdevice to open</div>

  <div id="membername">midiChannel</div> 
  <div id="memberdesc">int, the midichannel of the input to open</div>

  <div id="membername">inputDeviceName</div> 
  <div id="memberdesc">String, name of the input to open</div>
</div> 
</div> 
  
<div id="point"> 
  <div id="pointname"> returns </div> 
  <div id="pointcontent">None</div> 
</div> 

  <div id="point"> 
    <div id="pointname"> usage </div> 
    <div id="pointcontent">Web & Application</div> 
  </div> 
  <div id="point"> 
    <div id="pointname"> related </div> 
    <div id="pointcontent"><A href="midiio_method_getmidiout.htm">getMidiOut ( )</A><BR>
<A href="midiio_method_plug.htm">plug ( )</A><BR>
</div> 
  </div> 
</div> 
</body>
<script language="JavaScript" src="script.js" type="text/javascript"></script>
</html>
